{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst nbNOPickers = {\n  // Calendar navigation\n  previousMonth: 'Forrige måned',\n  nextMonth: 'Neste måned',\n  // View navigation\n  openPreviousView: 'åpne forrige visning',\n  openNextView: 'åpne neste visning',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'årsvisning er åpen, bytt til kalendervisning' : 'kalendervisning er åpen, bytt til årsvisning',\n  // inputModeToggleButtonAriaLabel: (isKeyboardInputOpen: boolean, viewType: 'calendar' | 'clock') => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\n  // DateRange placeholders\n  start: 'Start',\n  end: 'Slutt',\n  // Action bar\n  cancelButtonLabel: 'Avbryt',\n  clearButtonLabel: 'Fjern',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'I dag',\n  // Toolbar titles\n  // datePickerDefaultToolbarTitle: 'Select date',\n  // dateTimePickerDefaultToolbarTitle: 'Select date & time',\n  // timePickerDefaultToolbarTitle: 'Select time',\n  // dateRangePickerDefaultToolbarTitle: 'Select date range',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Velg ${view}. ${time === null ? 'Ingen tid valgt' : `Valgt tid er ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} timer`,\n  minutesClockNumberText: minutes => `${minutes} minutter`,\n  secondsClockNumberText: seconds => `${seconds} sekunder`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Velg dato, valgt dato er ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Velg dato',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Velg tid, valgt tid er ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Velg tid',\n  // Table labels\n  timeTableLabel: 'velg tid',\n  dateTableLabel: 'velg dato'\n};\nexport const nbNO = getPickersLocalization(nbNOPickers);","map":{"version":3,"sources":["C:/Users/Toshiba/Desktop/Maxlence Projects/MaxmoverOfficial/MaxMover/node_modules/@mui/x-date-pickers/locales/nbNO.js"],"names":["getPickersLocalization","nbNOPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","clockLabelText","time","adapter","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","nbNO"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC;AACA,MAAMC,WAAW,GAAG;AAClB;AACAC,EAAAA,aAAa,EAAE,eAFG;AAGlBC,EAAAA,SAAS,EAAE,aAHO;AAIlB;AACAC,EAAAA,gBAAgB,EAAE,sBALA;AAMlBC,EAAAA,YAAY,EAAE,oBANI;AAOlBC,EAAAA,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAT,GAAkB,8CAAlB,GAAmE,8CAP/F;AAQlB;AACA;AACAC,EAAAA,KAAK,EAAE,OAVW;AAWlBC,EAAAA,GAAG,EAAE,OAXa;AAYlB;AACAC,EAAAA,iBAAiB,EAAE,QAbD;AAclBC,EAAAA,gBAAgB,EAAE,OAdA;AAelBC,EAAAA,aAAa,EAAE,IAfG;AAgBlBC,EAAAA,gBAAgB,EAAE,OAhBA;AAiBlB;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,cAAc,EAAE,CAACP,IAAD,EAAOQ,IAAP,EAAaC,OAAb,KAA0B,QAAOT,IAAK,KAAIQ,IAAI,KAAK,IAAT,GAAgB,iBAAhB,GAAqC,gBAAeC,OAAO,CAACC,MAAR,CAAeF,IAAf,EAAqB,UAArB,CAAiC,EAAE,EAvB/H;AAwBlBG,EAAAA,oBAAoB,EAAEC,KAAK,IAAK,GAAEA,KAAM,QAxBtB;AAyBlBC,EAAAA,sBAAsB,EAAEC,OAAO,IAAK,GAAEA,OAAQ,WAzB5B;AA0BlBC,EAAAA,sBAAsB,EAAEC,OAAO,IAAK,GAAEA,OAAQ,WA1B5B;AA2BlB;AACAC,EAAAA,sBAAsB,EAAE,CAACC,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,GAAmD,4BAA2BC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA+C,EAA7H,GAAiI,WA5B5J;AA6BlBI,EAAAA,sBAAsB,EAAE,CAACJ,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,GAAmD,0BAAyBC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA+C,EAA3H,GAA+H,UA7B1J;AA8BlB;AACAK,EAAAA,cAAc,EAAE,UA/BE;AAgClBC,EAAAA,cAAc,EAAE;AAhCE,CAApB;AAkCA,OAAO,MAAMC,IAAI,GAAGhC,sBAAsB,CAACC,WAAD,CAAnC","sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\r\nconst nbNOPickers = {\r\n  // Calendar navigation\r\n  previousMonth: 'Forrige måned',\r\n  nextMonth: 'Neste måned',\r\n  // View navigation\r\n  openPreviousView: 'åpne forrige visning',\r\n  openNextView: 'åpne neste visning',\r\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'årsvisning er åpen, bytt til kalendervisning' : 'kalendervisning er åpen, bytt til årsvisning',\r\n  // inputModeToggleButtonAriaLabel: (isKeyboardInputOpen: boolean, viewType: 'calendar' | 'clock') => isKeyboardInputOpen ? `text input view is open, go to ${viewType} view` : `${viewType} view is open, go to text input view`,\r\n  // DateRange placeholders\r\n  start: 'Start',\r\n  end: 'Slutt',\r\n  // Action bar\r\n  cancelButtonLabel: 'Avbryt',\r\n  clearButtonLabel: 'Fjern',\r\n  okButtonLabel: 'OK',\r\n  todayButtonLabel: 'I dag',\r\n  // Toolbar titles\r\n  // datePickerDefaultToolbarTitle: 'Select date',\r\n  // dateTimePickerDefaultToolbarTitle: 'Select date & time',\r\n  // timePickerDefaultToolbarTitle: 'Select time',\r\n  // dateRangePickerDefaultToolbarTitle: 'Select date range',\r\n  // Clock labels\r\n  clockLabelText: (view, time, adapter) => `Velg ${view}. ${time === null ? 'Ingen tid valgt' : `Valgt tid er ${adapter.format(time, 'fullTime')}`}`,\r\n  hoursClockNumberText: hours => `${hours} timer`,\r\n  minutesClockNumberText: minutes => `${minutes} minutter`,\r\n  secondsClockNumberText: seconds => `${seconds} sekunder`,\r\n  // Open picker labels\r\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Velg dato, valgt dato er ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Velg dato',\r\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Velg tid, valgt tid er ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Velg tid',\r\n  // Table labels\r\n  timeTableLabel: 'velg tid',\r\n  dateTableLabel: 'velg dato'\r\n};\r\nexport const nbNO = getPickersLocalization(nbNOPickers);"]},"metadata":{},"sourceType":"module"}