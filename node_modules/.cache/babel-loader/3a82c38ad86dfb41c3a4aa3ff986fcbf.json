{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Toshiba\\\\Desktop\\\\Maxlence Projects\\\\MaxmoverOfficial\\\\MaxMover\\\\src\\\\common\\\\InputField\\\\Form.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Switch from \"@mui/material/Switch\";\nimport { useNavigate } from \"react-router-dom\"; // Date Picker\n\nimport Stack from \"@mui/material/Stack\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\"; // Select DropDown\n//CKtexteditor\n\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\"; //\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SelectBox = props => {\n  _s();\n\n  const navigate = useNavigate();\n  const [currency, setCurrency] = React.useState(\"\");\n\n  const handleChange = event => {\n    setCurrency(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    sx: {\n      width: 1\n    },\n    autoComplete: \"off\",\n    id: \"outlined-select-currency\",\n    select: true,\n    size: \"small\",\n    onChange: handleChange,\n    helperText: props.helperText,\n    label: props.label,\n    value: currency,\n    children: props.data.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n      onClick: () => {\n        if (option.url) navigate(option.url);\n      },\n      value: option.value,\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectBox, \"D7+KnbFrE2ZocwLYvsrBePhbLYU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SelectBox;\nexport const InputBox = props => {\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    sx: {\n      width: 1\n    },\n    size: \"small\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n_c2 = InputBox;\nexport const TextAreaBox = props => {\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    sx: {\n      width: 1\n    },\n    size: \"small\",\n    id: \"outlined-textarea\",\n    multiline: true,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_c3 = TextAreaBox;\nexport const InputBoxWithSwitch = props => {\n  const label = {\n    inputProps: {\n      \"aria-label\": \"Size switch demo\"\n    }\n  };\n\n  const SwitchesSize = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Switch, { ...label,\n        defaultChecked: true,\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    sx: {\n      \"& .MuiTextField-root\": {\n        width: \"100%\"\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box_with_switch_div\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-required\",\n          size: \"small\",\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: \"input_box_with_switch_div_Switch\",\n          component: \"span\",\n          children: /*#__PURE__*/_jsxDEV(SwitchesSize, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_c4 = InputBoxWithSwitch;\nexport const SideLabelInput = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Customer_date_div\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: props.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n        type: props.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c5 = SideLabelInput;\nexport const DatepickerMui = () => {\n  _s2();\n\n  const [value, setValue] = React.useState(null);\n\n  const handleChange = newValue => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n      dateAdapter: AdapterDayjs,\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        children: /*#__PURE__*/_jsxDEV(MobileDatePicker, {\n          label: \"Date mobile\",\n          inputFormat: \"MM/DD/YYYY\",\n          value: value,\n          onChange: handleChange,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(DatepickerMui, \"EEjdpY/CSe7/lDQurV9yi1RbKSs=\");\n\n_c6 = DatepickerMui;\nexport const TextEditor = () => {\n  return /*#__PURE__*/_jsxDEV(CKEditor, {\n    editor: ClassicEditor,\n    data: \"<p>Hello from CKEditor 5!</p>\",\n    onReady: editor => {\n      // You can store the \"editor\" and use when it is needed.\n      console.log(\"Editor is ready to use!\", editor);\n    },\n    onChange: (event, editor) => {\n      const data = editor.getData();\n      console.log({\n        event,\n        editor,\n        data\n      });\n    },\n    onBlur: (event, editor) => {\n      console.log(\"Blur.\", editor);\n    },\n    onFocus: (event, editor) => {\n      console.log(\"Focus.\", editor);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_c7 = TextEditor;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"SelectBox\");\n$RefreshReg$(_c2, \"InputBox\");\n$RefreshReg$(_c3, \"TextAreaBox\");\n$RefreshReg$(_c4, \"InputBoxWithSwitch\");\n$RefreshReg$(_c5, \"SideLabelInput\");\n$RefreshReg$(_c6, \"DatepickerMui\");\n$RefreshReg$(_c7, \"TextEditor\");","map":{"version":3,"sources":["C:/Users/Toshiba/Desktop/Maxlence Projects/MaxmoverOfficial/MaxMover/src/common/InputField/Form.jsx"],"names":["React","Box","TextField","MenuItem","Switch","useNavigate","Stack","LocalizationProvider","AdapterDayjs","MobileDatePicker","CKEditor","ClassicEditor","SelectBox","props","navigate","currency","setCurrency","useState","handleChange","event","target","value","width","helperText","label","data","map","option","url","InputBox","TextAreaBox","InputBoxWithSwitch","inputProps","SwitchesSize","SideLabelInput","type","DatepickerMui","setValue","newValue","params","TextEditor","editor","console","log","getData"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Switch from \"@mui/material/Switch\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n// Date Picker\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { MobileDatePicker } from \"@mui/x-date-pickers/MobileDatePicker\";\r\n\r\n// Select DropDown\r\n//CKtexteditor\r\n\r\nimport { CKEditor } from \"@ckeditor/ckeditor5-react\";\r\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\r\n\r\n//\r\nexport const SelectBox = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [currency, setCurrency] = React.useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      sx={{ width: 1 }}\r\n      autoComplete=\"off\"\r\n      id=\"outlined-select-currency\"\r\n      select\r\n      size=\"small\"\r\n      onChange={handleChange}\r\n      helperText={props.helperText}\r\n      label={props.label}\r\n      value={currency}>\r\n      {props.data.map((option) => (\r\n        <MenuItem\r\n          onClick={() => {\r\n            if (option.url) navigate(option.url);\r\n          }}\r\n          key={option.value}\r\n          value={option.value}>\r\n          {option.label}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n};\r\nexport const InputBox = (props) => {\r\n  return <TextField sx={{ width: 1 }} size=\"small\" {...props} />;\r\n};\r\nexport const TextAreaBox = (props) => {\r\n  return (\r\n    <TextField\r\n      sx={{ width: 1 }}\r\n      size=\"small\"\r\n      id=\"outlined-textarea\"\r\n      multiline\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nexport const InputBoxWithSwitch = (props) => {\r\n  const label = { inputProps: { \"aria-label\": \"Size switch demo\" } };\r\n\r\n  const SwitchesSize = () => {\r\n    return (\r\n      <div>\r\n        <Switch {...label} defaultChecked size=\"small\" />\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      sx={{\r\n        \"& .MuiTextField-root\": { width: \"100%\" },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\">\r\n      <div>\r\n        {/* Toggle */}\r\n        <div className=\"input_box_with_switch_div\">\r\n          <TextField id=\"outlined-required\" size=\"small\" {...props} />\r\n          <Box className=\"input_box_with_switch_div_Switch\" component=\"span\">\r\n            <SwitchesSize />\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\nexport const SideLabelInput = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"Customer_date_div\">\r\n        <label>{props.label}</label>\r\n        <InputBox type={props.type} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const DatepickerMui = () => {\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  const handleChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n        <Stack>\r\n          <MobileDatePicker\r\n            label=\"Date mobile\"\r\n            inputFormat=\"MM/DD/YYYY\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            renderInput={(params) => <TextField {...params} />}\r\n          />\r\n        </Stack>\r\n      </LocalizationProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const TextEditor = () => {\r\n  return (\r\n    <CKEditor\r\n      editor={ClassicEditor}\r\n      data=\"<p>Hello from CKEditor 5!</p>\"\r\n      onReady={(editor) => {\r\n        // You can store the \"editor\" and use when it is needed.\r\n        console.log(\"Editor is ready to use!\", editor);\r\n      }}\r\n      onChange={(event, editor) => {\r\n        const data = editor.getData();\r\n        console.log({ event, editor, data });\r\n      }}\r\n      onBlur={(event, editor) => {\r\n        console.log(\"Blur.\", editor);\r\n      }}\r\n      onFocus={(event, editor) => {\r\n        console.log(\"Focus.\", editor);\r\n      }}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}